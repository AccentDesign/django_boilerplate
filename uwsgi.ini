[uwsgi]
strict = true
master = true
enable-threads = true
vacuum = true                           ; Delete sockets during shutdown
single-interpreter = true
die-on-term = true                      ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true

disable-logging = true                  ; Disable built-in logging
log-4xx = true                          ; but log 4xx's anyway
log-5xx = true                          ; and 5xx's

wsgi-file = app/wsgi.py
wsgi-env-behaviour = holy

http = :8000                            ; add an http router/server on the specified address
http-auto-chunked = true                ; automatically transform output to chunked encoding during HTTP 1.1 keepalive (if needed)
http-keepalive = true                   ; HTTP 1.1 keepalive support (non-pipelined) requests

harakiri = 60                           ; forcefully kill workers after 60 seconds

max-requests = 1000                     ; Restart workers after this many requests
max-worker-lifetime = 3600              ; Restart workers after this many seconds
reload-on-rss = 2048                    ; Restart workers after this much resident memory
worker-reload-mercy = 60                ; How long to wait before forcefully killing workers

cheaper-algo = busyness
processes = 16                          ; Maximum number of workers allowed
cheaper = 2                             ; Minimum number of workers allowed
cheaper-initial = 2                     ; Workers created at startup
cheaper-overload = 1                    ; Length of a cycle in seconds
cheaper-step = 2                        ; How many workers to spawn at a time

cheaper-busyness-multiplier = 30        ; How many cycles to wait before killing workers
cheaper-busyness-min = 20               ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70               ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 10     ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 2       ; How many emergency workers to create if there are too many requests in the queue